@model MMP.Models.Property

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>AddProperty</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.0/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>

    <style>
           .topBarLine{
            margin-bottom:0px;
        }
        .topBarLine h3{
            color:#ffffff;
        }
        #AddPropertyForm{
            background: #ffffff;
            margin-top:15px;
            
           
        }
        
        #subContainer{
            background:#9ec6f1;
            height:550px;
        }
        .leftNavContainer {
              /*background:#ffffff;*/
            margin-top:15px;
            margin-left:30px;
            margin-right:15px;
            padding-left:0%;
            
        }
         #btnSave{
            width:100%;
        }
         #successMessage{
            font-weight:bold;
            color:lightgreen;
        }
    </style>
</head>
<body>
    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <div class="navbar navbar-default navbar-fixed-top navbar-custom" role="navigation">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                @Html.ActionLink(".", "Index", "Home", new { area = "" }, new { @class = "navbar-brand" })
            </div>

            @Html.Partial("_TopMenuPartialPage")

        </div>
    </div>
    <div class="navbar navbar-inverse topBarLine">
        <div class="container">
            <h3>Add Properties</h3>
        </div>
    </div>
    <div class="container">
        <div id=subContainer>
            <div class="row">
                <div class="col-lg-3 leftNavContainer"></div>

                <div class="col-lg-7" id="AddPropertyForm">
                    @*@if (Session["userID"] != null)
                    {*@

                    @*"AddProduct", "Product", FormMethod.Post, new { enctype = "multipart/form-data"*@
                        @using (Html.BeginForm("AddProperty", "Property", FormMethod.Post, new { enctype = "multipart/form-data" }))
                        {
                            <h4 style="border-bottom:1px solid;">Add Properties</h4>
                            <br />
                            <h3 id="successMessage">@ViewBag.successMessage</h3>
                            @Html.AntiForgeryToken()

                            <div class="form-horizontal">

                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="form-group">
                                    @Html.LabelFor(model => model.title, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.title, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.title, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Desc, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Desc, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Desc, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.categoryID, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownList("categoryID", "Select Category")
                                        @*@Html.EditorFor(model => model.categoryID, new { htmlAttributes = new { @class = "form-control" } })*@
                                        @Html.ValidationMessageFor(model => model.categoryID, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.price, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.price, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.price, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.location, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.location, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.location, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                @*<div class="form-group">
                                        @Html.LabelFor(model => model.status, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.status, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.status, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.date, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.date, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.date, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.userID, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.userID, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.userID, "", new { @class = "text-danger" })
                                        </div>
                                    </div>*@

                                <div class="form-group">
                                    @Html.LabelFor(model => model.image, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @*@Html.EditorFor(model => model.image, new { htmlAttributes = new { @class = "form-control" } })*@
                                        <input type="file" name="upload" id="upload"  />
                                        @*@Html.ValidationMessageFor(model => model.image, "", new { @class = "text-danger" })*@
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        <input type="submit" value="Add Property" class="btn btn-success" id="btnSave" />
                                    </div>
                                </div>
                            </div>
                        }
                    @*}
                    else
                    {
                        Response.Redirect("Home/Index",);

                        //Response.Redirect("~/HOME/NoResults");
                    }*@

                   
                </div>
            </div>
        </div>

    </div>
   
    
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</body>
</html>
